package flight_reservation_app.utilities;

import org.springframework.stereotype.Component;
	import java.io.FileOutputStream;
	import java.util.Date;
	import com.itextpdf.text.Anchor;
	import com.itextpdf.text.BadElementException;
	import com.itextpdf.text.BaseColor;
	import com.itextpdf.text.Chapter;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
	import com.itextpdf.text.DocumentException;
	import com.itextpdf.text.Element;
	import com.itextpdf.text.Font;
	import com.itextpdf.text.List;
	import com.itextpdf.text.ListItem;
	import com.itextpdf.text.Paragraph;
	import com.itextpdf.text.Phrase;
	import com.itextpdf.text.Section;
	import com.itextpdf.text.pdf.PdfPCell;
	import com.itextpdf.text.pdf.PdfPTable;
	import com.itextpdf.text.pdf.PdfWriter;

import flight_reservation_app.Entity.Reservation;
	@Component
	public class PDFgenerator {
	    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
	            Font.BOLD);
	    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
	            Font.BOLD);
	    
	    
	    public  void generationPDF(Reservation reservation, String filePath) {
	       
	            Document document = new Document();
	            try {
	            	PdfWriter.getInstance(document, new FileOutputStream(filePath));
	            document.open();
	            document.close();
	        } catch (Exception e) {
	            e.printStackTrace();
	        }
	    }


		// iText allows to add metadata to the PDF which can be viewed in your Adobe
	    // Reader
	    // under File -> Properties
	    private static void addMetaData(Document document) {
	        document.addTitle("My first PDF");
	        document.addSubject("Using iText");
	        document.addKeywords("Java, PDF, iText");
	        document.addAuthor("Lars Vogel");
	        document.addCreator("Lars Vogel");
	    }

	    private void addTitleAndTable(Document document, String name, String emailId, String phone,
				String operatingAirlines, String departureDate, String departureCity, String arrivalCity) 
	            throws DocumentException {
	        Paragraph preface = new Paragraph();

	        preface.add(new Paragraph("Flight booking Details", catFont));

	        preface.add(new Paragraph(
	                "Report generated by: " + "Fligth Reservation Company" + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
	                smallBold));
	        
	        
	        addEmptyLine(preface, 3);
	        
	        preface.add(new Paragraph(
	                "This document describes something which is very important ",
	                smallBold));

	        addEmptyLine(preface, 8);

	        preface.add(new Paragraph(
	                "This document is a preliminary version and not subject to your license agreement or any other agreement with vogella.com ;-).",
	                smallBold));

	        document.add(preface);
	        document.add(Chunk.NEWLINE);
	        document.add(Chunk.NEWLINE);
//	        // Start a new page
//	        document.newPage();
//	    }
//
//	    private static void addContent(Document document) throws DocumentException {
//	        Anchor anchor = new Anchor("First Chapter", catFont);
//	        anchor.setName("First Chapter");
//
//	        // Second parameter is the number of the chapter
//	        Chapter catPart = new Chapter(new Paragraph(anchor), 1);
//
//	        Paragraph subPara = new Paragraph("Subcategory 1", smallBold);
//	        Section subCatPart = catPart.addSection(subPara);
//	        subCatPart.add(new Paragraph("Hello"));
//
//	        subPara = new Paragraph("Subcategory 2", smallBold);
//	        subCatPart = catPart.addSection(subPara);
//	        subCatPart.add(new Paragraph("Paragraph 1"));
//	        subCatPart.add(new Paragraph("Paragraph 2"));
//	        subCatPart.add(new Paragraph("Paragraph 3"));
//
//	        // add a list
//	        createList(subCatPart);
//	        Paragraph paragraph = new Paragraph();
//	        addEmptyLine(paragraph, 5);
//	        subCatPart.add(paragraph);
//
//	        // add a table
//	        createTable(subCatPart);
//
//	        // now add all this to the document
//	        document.add(catPart);
//
//	        // Next section
//	        anchor = new Anchor("Second Chapter", catFont);
//	        anchor.setName("Second Chapter");
//
//	        // Second parameter is the number of the chapter
//	        catPart = new Chapter(new Paragraph(anchor), 1);
//
//	        subPara = new Paragraph("Subcategory", smallBold);
//	        subCatPart = catPart.addSection(subPara);
//	        subCatPart.add(new Paragraph("This is a very important message"));
//
//	        // now add all this to the document
//	        document.add(catPart);

	    }

	    private static void createTable(Section subCatPart)
	            throws BadElementException {
	        PdfPTable table = new PdfPTable(1);

	        // t.setBorderColor(BaseColor.GRAY);
	        // t.setPadding(4);
	        // t.setSpacing(4);
	        // t.setBorderWidth(1);

	        PdfPCell c1 = new PdfPCell(new Phrase("Passenger Details"));
	        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	        c1.setColspan(2);
	        table.addCell(c1);

	        table.addCell("Passenger name");
	        table.addCell(c1);
	        table.addCell("Email Id");
	        table.addCell(c1);
	        table.addCell("Phone Nmuber");
	        table.addCell(c1);

//	        document.add(table);

	    }

	    private static void createList(Section subCatPart) {
	        List list = new List(true, false, 10);
	        list.add(new ListItem("First point"));
	        list.add(new ListItem("Second point"));
	        list.add(new ListItem("Third point"));
	        subCatPart.add(list);
	    }

	    private static void addEmptyLine(Paragraph paragraph, int number) {
	        for (int i = 0; i < number; i++) {
	            paragraph.add(new Paragraph(" "));
	        }
	    }
	}
